# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: "Integrate"

on:
  push:
    branches:
      - "develop"
  pull_request: null

env:
  PHP_EXTENSIONS: "intl"

jobs:
  file_consistency:
    name: "1️⃣ File consistency"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.0"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          ini-values: "post_max_size=256M"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check file permissions"
        run: |
          test "$(find . -type f -not -path './.git/*' -executable)" = ""

      - name: "Check exported files"
        run: |
          EXPECTED="LICENSE,README.md,composer.json"
          CURRENT="$(git archive HEAD | tar --list --exclude="src" --exclude="src/*" | paste -s -d ",")"
          echo "CURRENT =${CURRENT}"
          echo "EXPECTED=${EXPECTED}"
          test "${CURRENT}" = "${EXPECTED}"

      - name: Install Effigy
        run: |
          composer global require decodelabs/effigy

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Find non-printable ASCII characters"
        run: |
          composer global exec effigy non-ascii

      - name: "Check source code for syntax errors"
        run: |
          composer global exec effigy lint

#  unit_tests:
#    name: "2️⃣ Unit and functional tests"
#    needs:
#      - "file_consistency"
#    strategy:
#      matrix:
#        php-version:
#          - "8.0"
#          - "8.1"
#          - "8.2"
#        dependencies:
#          - "lowest"
#          - "highest"
#    runs-on: "ubuntu-latest"
#    steps:
#      - name: "Set up PHP"
#        uses: "shivammathur/setup-php@v2"
#        with:
#          php-version: "${{ matrix.php-version }}"
#          extensions: "${{ env.PHP_EXTENSIONS }}"
#          ini-values: "post_max_size=256M"

#      - name: "Checkout code"
#        uses: "actions/checkout@v3"

#      - name: "Install dependencies"
#        uses: "ramsey/composer-install@v2"
#        with:
#          dependency-versions: "${{ matrix.dependencies }}"

#      - name: "Execute unit tests"
        # run: "composer run-script --no-interaction phpunit -- --verbose"
#        run: "echo 'Tom has the key.'"
        # @TODO Functional tests

#      - name: Send coverage to Coveralls
#        if: "matrix.php-version == '8.1' && matrix.dependencies == 'highest'"
#        env:
#          COVERALLS_REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#        run: |
#          wget "https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.2/php-coveralls.phar"
#          php ./php-coveralls.phar -v

  static_analysis:
    name: "3️⃣ Static Analysis"
    needs:
      - "file_consistency"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "8.0"
          - "8.1"
          - "8.2"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          ini-values: "post_max_size=256M"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: Install Effigy
        run: |
          composer global require decodelabs/effigy

      - name: "Validate Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Execute static analysis"
        run: |
          composer global exec effigy analyze -- --headless


  coding_standards:
    name: "4️⃣ Coding Standards"
    needs:
      - "file_consistency"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.0"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          ini-values: "post_max_size=256M"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check EditorConfig configuration"
        run: "test -f .editorconfig"

      - name: "Check adherence to EditorConfig"
        uses: "greut/eclint-action@v0"

      - name: Install Effigy
        run: |
          composer global require decodelabs/effigy

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Check coding style"
        run: |
          composer global exec effigy format -- --headless


